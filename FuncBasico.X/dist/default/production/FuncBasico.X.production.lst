

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon Apr 28 11:28:45 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000E                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  008C                     	;# 
    55  008E                     	;# 
    56  0091                     	;# 
    57  0092                     	;# 
    58  0093                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0097                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010E                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011D                     	;# 
    82  018C                     	;# 
    83  018E                     	;# 
    84  0191                     	;# 
    85  0191                     	;# 
    86  0192                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  020C                     	;# 
    93  0211                     	;# 
    94  0211                     	;# 
    95  0212                     	;# 
    96  0212                     	;# 
    97  0213                     	;# 
    98  0213                     	;# 
    99  0214                     	;# 
   100  0214                     	;# 
   101  0215                     	;# 
   102  0215                     	;# 
   103  0215                     	;# 
   104  0216                     	;# 
   105  0216                     	;# 
   106  0217                     	;# 
   107  0217                     	;# 
   108  0391                     	;# 
   109  0392                     	;# 
   110  0393                     	;# 
   111  0498                     	;# 
   112  0498                     	;# 
   113  0499                     	;# 
   114  049A                     	;# 
   115  049B                     	;# 
   116  049B                     	;# 
   117  049C                     	;# 
   118  049E                     	;# 
   119  049F                     	;# 
   120  0611                     	;# 
   121  0612                     	;# 
   122  0613                     	;# 
   123  0613                     	;# 
   124  0614                     	;# 
   125  0615                     	;# 
   126  0616                     	;# 
   127  0616                     	;# 
   128  0617                     	;# 
   129  0618                     	;# 
   130  0619                     	;# 
   131  0619                     	;# 
   132  061A                     	;# 
   133  061B                     	;# 
   134  061C                     	;# 
   135  061C                     	;# 
   136  0691                     	;# 
   137  0692                     	;# 
   138  0693                     	;# 
   139  0694                     	;# 
   140  0695                     	;# 
   141  0F0F                     	;# 
   142  0F10                     	;# 
   143  0F11                     	;# 
   144  0F12                     	;# 
   145  0F13                     	;# 
   146  0F14                     	;# 
   147  0F15                     	;# 
   148  0F16                     	;# 
   149  0F17                     	;# 
   150  0F18                     	;# 
   151  0F19                     	;# 
   152  0F1A                     	;# 
   153  0F1B                     	;# 
   154  0F1C                     	;# 
   155  0F1D                     	;# 
   156  0F1E                     	;# 
   157  0F1F                     	;# 
   158  0FE3                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  0422                     __pidataBANK0:	
   173                           
   174                           ;initializer for _paso
   175  0422  3401               	retlw	1
   176  0423  3400               	retlw	0
   177                           
   178                           ;initializer for _rpm
   179  0424  342A               	retlw	42
   180  0425  3400               	retlw	0
   181  000E                     _PORTCbits	set	14
   182  008E                     _TRISCbits	set	142
   183  0113                     _CM2CON0	set	275
   184  0113                     _CM2CON0bits	set	275
   185  0114                     _CM2CON1	set	276
   186  0117                     _FVRCON	set	279
   187  018E                     _ANSELCbits	set	398
   188                           
   189                           ; #config settings
   190  0000                     
   191                           	psect	cinit
   192  07F2                     start_initialization:	
   193  07F2                     __initialization:	
   194                           
   195                           ; Clear objects allocated to BANK0
   196  07F2  01C6               	clrf	__pbssBANK0& (0+127)
   197  07F3  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   198  07F4  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   199  07F5  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   200                           
   201                           ; Initialize objects allocated to BANK0
   202  07F6  2422               	fcall	__pidataBANK0	;fetch initializer
   203  07F7  00CA               	movwf	__pdataBANK0& (0+127)
   204  07F8  2423               	fcall	__pidataBANK0+1	;fetch initializer
   205  07F9  00CB               	movwf	(__pdataBANK0+1)& (0+127)
   206  07FA  2424               	fcall	__pidataBANK0+2	;fetch initializer
   207  07FB  00CC               	movwf	(__pdataBANK0+2)& (0+127)
   208  07FC  2425               	fcall	__pidataBANK0+3	;fetch initializer
   209  07FD  00CD               	movwf	(__pdataBANK0+3)& (0+127)
   210  07FE                     end_of_initialization:	
   211                           ;End of C runtime variable initialization code
   212                           
   213  07FE                     __end_of__initialization:	
   214  07FE  0020               	movlb	0
   215  07FF  2C1B               	ljmp	_main	;jump to C main() function
   216                           
   217                           	psect	bssBANK0
   218  0046                     __pbssBANK0:	
   219  0046                     _va:	
   220  0046                     	ds	2
   221  0048                     _x:	
   222  0048                     	ds	2
   223                           
   224                           	psect	dataBANK0
   225  004A                     __pdataBANK0:	
   226  004A                     _paso:	
   227  004A                     	ds	2
   228  004C                     _rpm:	
   229  004C                     	ds	2
   230                           
   231                           	psect	cstackCOMMON
   232  0070                     __pcstackCOMMON:	
   233  0070                     ?_vRef:	
   234  0070                     ??_vRef:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_medida_COMP:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ??_medida_COMP:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_algoritmo1:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_setup:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_loop:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?___ftge:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?___awdiv:	
   256                           ; 1 bit 
   257                           
   258  0070                     ?___ftpack:	
   259                           ; 2 bytes @ 0x0
   260                           
   261  0070                     ___awdiv@divisor:	
   262                           ; 3 bytes @ 0x0
   263                           
   264  0070                     ___ftpack@arg:	
   265                           ; 2 bytes @ 0x0
   266                           
   267  0070                     ___ftge@ff1:	
   268                           ; 3 bytes @ 0x0
   269                           
   270                           
   271                           ; 3 bytes @ 0x0
   272  0070                     	ds	2
   273  0072                     ___awdiv@dividend:	
   274                           
   275                           ; 2 bytes @ 0x2
   276  0072                     	ds	1
   277  0073                     ___ftpack@exp:	
   278  0073                     ___ftge@ff2:	
   279                           ; 1 bytes @ 0x3
   280                           
   281                           
   282                           ; 3 bytes @ 0x3
   283  0073                     	ds	1
   284  0074                     ??___awdiv:	
   285  0074                     ___ftpack@sign:	
   286                           ; 0 bytes @ 0x4
   287                           
   288                           
   289                           ; 1 bytes @ 0x4
   290  0074                     	ds	1
   291  0075                     ??___ftpack:	
   292  0075                     ___awdiv@counter:	
   293                           ; 0 bytes @ 0x5
   294                           
   295                           
   296                           ; 1 bytes @ 0x5
   297  0075                     	ds	1
   298  0076                     ??___ftge:	
   299  0076                     ___awdiv@sign:	
   300                           ; 0 bytes @ 0x6
   301                           
   302                           
   303                           ; 1 bytes @ 0x6
   304  0076                     	ds	1
   305  0077                     ___awdiv@quotient:	
   306                           
   307                           ; 2 bytes @ 0x7
   308  0077                     	ds	1
   309  0078                     ?___ftadd:	
   310  0078                     ___ftadd@f1:	
   311                           ; 3 bytes @ 0x8
   312                           
   313                           
   314                           ; 3 bytes @ 0x8
   315  0078                     	ds	1
   316  0079                     ?___wmul:	
   317  0079                     ___wmul@multiplier:	
   318                           ; 2 bytes @ 0x9
   319                           
   320                           
   321                           ; 2 bytes @ 0x9
   322  0079                     	ds	2
   323  007B                     ___wmul@multiplicand:	
   324  007B                     ___ftadd@f2:	
   325                           ; 2 bytes @ 0xB
   326                           
   327                           
   328                           ; 3 bytes @ 0xB
   329  007B                     	ds	2
   330  007D                     ??___wmul:	
   331  007D                     ___awtoft@sign:	
   332                           ; 0 bytes @ 0xD
   333                           
   334                           
   335                           ; 1 bytes @ 0xD
   336  007D                     	ds	1
   337  007E                     ??_delayUs:	
   338  007E                     ??_delayMs:	
   339                           ; 0 bytes @ 0xE
   340                           
   341  007E                     ??_delayS:	
   342                           ; 0 bytes @ 0xE
   343                           
   344  007E                     ??_mover:	
   345                           ; 0 bytes @ 0xE
   346                           
   347  007E                     ??_algoritmo1:	
   348                           ; 0 bytes @ 0xE
   349                           
   350  007E                     ??_setup:	
   351                           ; 0 bytes @ 0xE
   352                           
   353  007E                     ??_loop:	
   354                           ; 0 bytes @ 0xE
   355                           
   356  007E                     ??_main:	
   357                           ; 0 bytes @ 0xE
   358                           
   359  007E                     ??___ftsub:	
   360                           ; 0 bytes @ 0xE
   361                           
   362                           
   363                           	psect	cstackBANK0
   364  0020                     __pcstackBANK0:	
   365                           ; 0 bytes @ 0xE
   366                           
   367  0020                     ??___ftadd:	
   368  0020                     ___wmul@product:	
   369                           ; 0 bytes @ 0x0
   370                           
   371                           
   372                           ; 2 bytes @ 0x0
   373  0020                     	ds	2
   374  0022                     ?___awtoft:	
   375  0022                     ___awtoft@c:	
   376                           ; 3 bytes @ 0x2
   377                           
   378                           
   379                           ; 2 bytes @ 0x2
   380  0022                     	ds	2
   381  0024                     ___ftadd@sign:	
   382                           
   383                           ; 1 bytes @ 0x4
   384  0024                     	ds	1
   385  0025                     ??___awtoft:	
   386  0025                     ___ftadd@exp2:	
   387                           ; 0 bytes @ 0x5
   388                           
   389                           
   390                           ; 1 bytes @ 0x5
   391  0025                     	ds	1
   392  0026                     ___ftadd@exp1:	
   393                           
   394                           ; 1 bytes @ 0x6
   395  0026                     	ds	1
   396  0027                     ?___ftsub:	
   397  0027                     ___ftsub@f2:	
   398                           ; 3 bytes @ 0x7
   399                           
   400                           
   401                           ; 3 bytes @ 0x7
   402  0027                     	ds	3
   403  002A                     ___ftsub@f1:	
   404                           
   405                           ; 3 bytes @ 0xA
   406  002A                     	ds	3
   407  002D                     ?_delayUs:	
   408  002D                     delayUs@us:	
   409                           ; 0 bytes @ 0xD
   410                           
   411                           
   412                           ; 2 bytes @ 0xD
   413  002D                     	ds	2
   414  002F                     delayUs@ciclo_esp:	
   415                           
   416                           ; 3 bytes @ 0xF
   417  002F                     	ds	3
   418  0032                     ?_delayMs:	
   419  0032                     delayMs@ms:	
   420                           ; 0 bytes @ 0x12
   421                           
   422                           
   423                           ; 2 bytes @ 0x12
   424  0032                     	ds	2
   425  0034                     delayMs@ciclo_esp:	
   426                           
   427                           ; 3 bytes @ 0x14
   428  0034                     	ds	3
   429  0037                     ?_delayS:	
   430  0037                     delayS@s:	
   431                           ; 0 bytes @ 0x17
   432                           
   433                           
   434                           ; 2 bytes @ 0x17
   435  0037                     	ds	2
   436  0039                     delayS@ciclo_esp:	
   437                           
   438                           ; 3 bytes @ 0x19
   439  0039                     	ds	3
   440  003C                     ?_mover:	
   441  003C                     mover@v:	
   442                           ; 0 bytes @ 0x1C
   443                           
   444                           
   445                           ; 2 bytes @ 0x1C
   446  003C                     	ds	2
   447  003E                     _mover$470:	
   448                           
   449                           ; 2 bytes @ 0x1E
   450  003E                     	ds	2
   451  0040                     _mover$471:	
   452                           
   453                           ; 2 bytes @ 0x20
   454  0040                     	ds	2
   455  0042                     ?_main:	
   456  0042                     main@argc:	
   457                           ; 2 bytes @ 0x22
   458                           
   459                           
   460                           ; 2 bytes @ 0x22
   461  0042                     	ds	2
   462  0044                     main@argv:	
   463                           
   464                           ; 2 bytes @ 0x24
   465  0044                     	ds	2
   466                           
   467                           	psect	maintext
   468  041B                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 223 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  argc            2   34[BANK0 ] int 
   477 ;;  argv            2   36[BANK0 ] PTR PTR unsigned char 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;		None
   480 ;; Return value:  Size  Location     Type
   481 ;;                  2   34[BANK0 ] int 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 17F/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1
   489 ;;      Params:         0       4       0
   490 ;;      Locals:         0       0       0
   491 ;;      Temps:          0       0       0
   492 ;;      Totals:         0       4       0
   493 ;;Total ram usage:        4 bytes
   494 ;; Hardware stack levels required when called:    9
   495 ;; This function calls:
   496 ;;		_loop
   497 ;;		_setup
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function _main
   505  041B                     _main:	
   506                           
   507                           ;main.c: 224: setup();
   508                           
   509                           ;incstack = 0
   510                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   511  041B  243C               	fcall	_setup
   512  041C                     l1282:	
   513                           ;main.c: 225: while(1){
   514                           
   515                           
   516                           ;main.c: 226: loop();
   517  041C  2430               	fcall	_loop
   518  041D  2C1C               	goto	l1282
   519  041E                     __end_of_main:	
   520                           
   521                           	psect	text1
   522  043C                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 189 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1
   539 ;;      Params:         0       0       0
   540 ;;      Locals:         0       0       0
   541 ;;      Temps:          0       0       0
   542 ;;      Totals:         0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    6
   546 ;; This function calls:
   547 ;;		_delayS
   548 ;;		_medida_COMP
   549 ;;		_vRef
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _setup
   557  043C                     _setup:	
   558                           
   559                           ;main.c: 190: vRef();
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   563  043C  241E               	fcall	_vRef
   564                           
   565                           ;main.c: 191: medida_COMP();
   566  043D  2426               	fcall	_medida_COMP
   567                           
   568                           ;main.c: 192: CM2CON0bits.C2ON=1;
   569  043E  0022               	movlb	2	; select bank2
   570  043F  1793               	bsf	19,7	;volatile
   571                           
   572                           ;main.c: 197: TRISCbits.TRISC3=0;
   573  0440  0021               	movlb	1	; select bank1
   574  0441  118E               	bcf	14,3	;volatile
   575                           
   576                           ;main.c: 198: TRISCbits.TRISC5=0;
   577  0442  128E               	bcf	14,5	;volatile
   578                           
   579                           ;main.c: 205: delayS(1);
   580  0443  3001               	movlw	1
   581  0444  0020               	movlb	0	; select bank0
   582  0445  00B7               	movwf	delayS@s
   583  0446  3000               	movlw	0
   584  0447  00B8               	movwf	delayS@s+1
   585  0448  257A               	fcall	_delayS
   586  0449  0008               	return
   587  044A                     __end_of_setup:	
   588                           
   589                           	psect	text2
   590  041E                     __ptext2:	
   591 ;; *************** function _vRef *****************
   592 ;; Defined at:
   593 ;;		line 86 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;		None               void
   600 ;; Registers used:
   601 ;;		wreg
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1
   607 ;;      Params:         0       0       0
   608 ;;      Locals:         0       0       0
   609 ;;      Temps:          0       0       0
   610 ;;      Totals:         0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_setup
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _vRef
   622  041E                     _vRef:	
   623                           
   624                           ;main.c: 95: FVRCON=0b10000100;
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _vRef: [wreg]
   628  041E  3084               	movlw	132
   629  041F  0022               	movlb	2	; select bank2
   630  0420  0097               	movwf	23	;volatile
   631  0421  0008               	return
   632  0422                     __end_of_vRef:	
   633                           
   634                           	psect	text3
   635  0426                     __ptext3:	
   636 ;; *************** function _medida_COMP *****************
   637 ;; Defined at:
   638 ;;		line 104 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;		None               void
   645 ;; Registers used:
   646 ;;		wreg
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1
   652 ;;      Params:         0       0       0
   653 ;;      Locals:         0       0       0
   654 ;;      Temps:          0       0       0
   655 ;;      Totals:         0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_setup
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _medida_COMP
   667  0426                     _medida_COMP:	
   668                           
   669                           ;main.c: 106: TRISCbits.TRISC0=1;
   670                           
   671                           ;incstack = 0
   672                           ; Regs used in _medida_COMP: [wreg]
   673  0426  0021               	movlb	1	; select bank1
   674  0427  140E               	bsf	14,0	;volatile
   675                           
   676                           ;main.c: 107: ANSELCbits.ANSC0=1;
   677  0428  0023               	movlb	3	; select bank3
   678  0429  140E               	bsf	14,0	;volatile
   679                           
   680                           ;main.c: 120: CM2CON0=0b00010000;
   681  042A  3010               	movlw	16
   682  042B  0022               	movlb	2	; select bank2
   683  042C  0093               	movwf	19	;volatile
   684                           
   685                           ;main.c: 129: CM2CON1=0b10000100;
   686  042D  3084               	movlw	132
   687  042E  0094               	movwf	20	;volatile
   688  042F  0008               	return
   689  0430                     __end_of_medida_COMP:	
   690                           
   691                           	psect	text4
   692  0430                     __ptext4:	
   693 ;; *************** function _loop *****************
   694 ;; Defined at:
   695 ;;		line 212 in file "main.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;		None               void
   702 ;; Registers used:
   703 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0   BANK1
   709 ;;      Params:         0       0       0
   710 ;;      Locals:         0       0       0
   711 ;;      Temps:          0       0       0
   712 ;;      Totals:         0       0       0
   713 ;;Total ram usage:        0 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    8
   716 ;; This function calls:
   717 ;;		_algoritmo1
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _loop
   725  0430                     _loop:	
   726                           
   727                           ;main.c: 213: va=0;
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _loop: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   731  0430  0020               	movlb	0	; select bank0
   732  0431  01C6               	clrf	_va
   733  0432  01C7               	clrf	_va+1
   734                           
   735                           ;main.c: 214: x=1;
   736  0433  3001               	movlw	1
   737  0434  00C8               	movwf	_x
   738  0435  3000               	movlw	0
   739  0436  00C9               	movwf	_x+1
   740  0437                     l1278:	
   741                           ;main.c: 215: while(CM2CON0bits.C2OUT==1){
   742                           
   743  0437  0022               	movlb	2	; select bank2
   744  0438  1F13               	btfss	19,6	;volatile
   745  0439  0008               	return
   746                           
   747                           ;main.c: 216: algoritmo1();
   748  043A  2462               	fcall	_algoritmo1
   749  043B  2C37               	goto	l1278
   750  043C                     __end_of_loop:	
   751                           
   752                           	psect	text5
   753  0462                     __ptext5:	
   754 ;; *************** function _algoritmo1 *****************
   755 ;; Defined at:
   756 ;;		line 177 in file "main.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;		None               void
   763 ;; Registers used:
   764 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1
   770 ;;      Params:         0       0       0
   771 ;;      Locals:         0       0       0
   772 ;;      Temps:          0       0       0
   773 ;;      Totals:         0       0       0
   774 ;;Total ram usage:        0 bytes
   775 ;; Hardware stack levels used:    1
   776 ;; Hardware stack levels required when called:    7
   777 ;; This function calls:
   778 ;;		_mover
   779 ;; This function is called by:
   780 ;;		_loop
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _algoritmo1
   786  0462                     _algoritmo1:	
   787                           
   788                           ;main.c: 179: va=va+x;
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _algoritmo1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   792  0462  0020               	movlb	0	; select bank0
   793  0463  0848               	movf	_x,w
   794  0464  0746               	addwf	_va,w
   795  0465  00C6               	movwf	_va
   796  0466  0849               	movf	_x+1,w
   797  0467  3D47               	addwfc	_va+1,w
   798  0468  00C7               	movwf	_va+1
   799                           
   800                           ;main.c: 180: x++;
   801  0469  3001               	movlw	1
   802  046A  07C8               	addwf	_x,f
   803  046B  3000               	movlw	0
   804  046C  3DC9               	addwfc	_x+1,f
   805                           
   806                           ;main.c: 181: x=x*(-1);
   807  046D  09C8               	comf	_x,f
   808  046E  09C9               	comf	_x+1,f
   809  046F  0AC8               	incf	_x,f
   810  0470  1903               	skipnz
   811  0471  0AC9               	incf	_x+1,f
   812                           
   813                           ;main.c: 182: mover(va);
   814  0472  0847               	movf	_va+1,w
   815  0473  01BD               	clrf	mover@v+1
   816  0474  07BD               	addwf	mover@v+1,f
   817  0475  0846               	movf	_va,w
   818  0476  01BC               	clrf	mover@v
   819  0477  07BC               	addwf	mover@v,f
   820  0478  2672               	fcall	_mover
   821  0479  0008               	return
   822  047A                     __end_of_algoritmo1:	
   823                           
   824                           	psect	text6
   825  0672                     __ptext6:	
   826 ;; *************** function _mover *****************
   827 ;; Defined at:
   828 ;;		line 137 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  v               2   28[BANK0 ] int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1
   842 ;;      Params:         0       2       0
   843 ;;      Locals:         0       4       0
   844 ;;      Temps:          0       0       0
   845 ;;      Totals:         0       6       0
   846 ;;Total ram usage:        6 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    6
   849 ;; This function calls:
   850 ;;		___awdiv
   851 ;;		___wmul
   852 ;;		_delayS
   853 ;; This function is called by:
   854 ;;		_algoritmo1
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _mover
   860  0672                     _mover:	
   861                           
   862                           ;main.c: 144: if(v>0){
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _mover: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   866  0672  0020               	movlb	0	; select bank0
   867  0673  083D               	movf	mover@v+1,w
   868  0674  3A80               	xorlw	128
   869  0675  00FF               	movwf	127
   870  0676  3080               	movlw	128
   871  0677  027F               	subwf	127,w
   872  0678  1D03               	skipz
   873  0679  2E7C               	goto	u1135
   874  067A  3001               	movlw	1
   875  067B  023C               	subwf	mover@v,w
   876  067C                     u1135:	
   877  067C  1C03               	skipc
   878  067D  2EBE               	goto	l49
   879                           
   880                           ;main.c: 148: PORTCbits.RC3=1;
   881  067E  0020               	movlb	0	; select bank0
   882  067F  158E               	bsf	14,3	;volatile
   883                           
   884                           ;main.c: 149: delayS(paso*(60/rpm)*v);
   885  0680  084D               	movf	_rpm+1,w
   886  0681  01F1               	clrf	___awdiv@divisor+1
   887  0682  07F1               	addwf	___awdiv@divisor+1,f
   888  0683  084C               	movf	_rpm,w
   889  0684  01F0               	clrf	___awdiv@divisor
   890  0685  07F0               	addwf	___awdiv@divisor,f
   891  0686  303C               	movlw	60
   892  0687  00F2               	movwf	___awdiv@dividend
   893  0688  3000               	movlw	0
   894  0689  00F3               	movwf	___awdiv@dividend+1
   895  068A  25BF               	fcall	___awdiv
   896  068B  0871               	movf	?___awdiv+1,w
   897  068C  01FA               	clrf	___wmul@multiplier+1
   898  068D  07FA               	addwf	___wmul@multiplier+1,f
   899  068E  0870               	movf	?___awdiv,w
   900  068F  01F9               	clrf	___wmul@multiplier
   901  0690  07F9               	addwf	___wmul@multiplier,f
   902  0691  0020               	movlb	0	; select bank0
   903  0692  084B               	movf	_paso+1,w
   904  0693  01FC               	clrf	___wmul@multiplicand+1
   905  0694  07FC               	addwf	___wmul@multiplicand+1,f
   906  0695  084A               	movf	_paso,w
   907  0696  01FB               	clrf	___wmul@multiplicand
   908  0697  07FB               	addwf	___wmul@multiplicand,f
   909  0698  247A               	fcall	___wmul
   910  0699  087A               	movf	?___wmul+1,w
   911  069A  0020               	movlb	0	; select bank0
   912  069B  01BF               	clrf	_mover$470+1
   913  069C  07BF               	addwf	_mover$470+1,f
   914  069D  0879               	movf	?___wmul,w
   915  069E  01BE               	clrf	_mover$470
   916  069F  07BE               	addwf	_mover$470,f
   917                           
   918                           ;main.c: 149: delayS(paso*(60/rpm)*v);
   919  06A0  083F               	movf	_mover$470+1,w
   920  06A1  01FA               	clrf	___wmul@multiplier+1
   921  06A2  07FA               	addwf	___wmul@multiplier+1,f
   922  06A3  083E               	movf	_mover$470,w
   923  06A4  01F9               	clrf	___wmul@multiplier
   924  06A5  07F9               	addwf	___wmul@multiplier,f
   925  06A6  083D               	movf	mover@v+1,w
   926  06A7  01FC               	clrf	___wmul@multiplicand+1
   927  06A8  07FC               	addwf	___wmul@multiplicand+1,f
   928  06A9  083C               	movf	mover@v,w
   929  06AA  01FB               	clrf	___wmul@multiplicand
   930  06AB  07FB               	addwf	___wmul@multiplicand,f
   931  06AC  247A               	fcall	___wmul
   932  06AD  087A               	movf	?___wmul+1,w
   933  06AE  0020               	movlb	0	; select bank0
   934  06AF  01C1               	clrf	_mover$471+1
   935  06B0  07C1               	addwf	_mover$471+1,f
   936  06B1  0879               	movf	?___wmul,w
   937  06B2  01C0               	clrf	_mover$471
   938  06B3  07C0               	addwf	_mover$471,f
   939                           
   940                           ;main.c: 149: delayS(paso*(60/rpm)*v);
   941  06B4  0841               	movf	_mover$471+1,w
   942  06B5  01B8               	clrf	delayS@s+1
   943  06B6  07B8               	addwf	delayS@s+1,f
   944  06B7  0840               	movf	_mover$471,w
   945  06B8  01B7               	clrf	delayS@s
   946  06B9  07B7               	addwf	delayS@s,f
   947  06BA  257A               	fcall	_delayS
   948                           
   949                           ;main.c: 150: PORTCbits.RC3=0;
   950  06BB  0020               	movlb	0	; select bank0
   951  06BC  118E               	bcf	14,3	;volatile
   952                           
   953                           ;main.c: 151: }else{
   954  06BD  0008               	return
   955  06BE                     l49:	
   956                           
   957                           ;main.c: 152: PORTCbits.RC5=1;
   958  06BE  0020               	movlb	0	; select bank0
   959  06BF  168E               	bsf	14,5	;volatile
   960                           
   961                           ;main.c: 153: delayS(paso*(60/rpm)*v);
   962  06C0  084D               	movf	_rpm+1,w
   963  06C1  01F1               	clrf	___awdiv@divisor+1
   964  06C2  07F1               	addwf	___awdiv@divisor+1,f
   965  06C3  084C               	movf	_rpm,w
   966  06C4  01F0               	clrf	___awdiv@divisor
   967  06C5  07F0               	addwf	___awdiv@divisor,f
   968  06C6  303C               	movlw	60
   969  06C7  00F2               	movwf	___awdiv@dividend
   970  06C8  3000               	movlw	0
   971  06C9  00F3               	movwf	___awdiv@dividend+1
   972  06CA  25BF               	fcall	___awdiv
   973  06CB  0871               	movf	?___awdiv+1,w
   974  06CC  01FA               	clrf	___wmul@multiplier+1
   975  06CD  07FA               	addwf	___wmul@multiplier+1,f
   976  06CE  0870               	movf	?___awdiv,w
   977  06CF  01F9               	clrf	___wmul@multiplier
   978  06D0  07F9               	addwf	___wmul@multiplier,f
   979  06D1  0020               	movlb	0	; select bank0
   980  06D2  084B               	movf	_paso+1,w
   981  06D3  01FC               	clrf	___wmul@multiplicand+1
   982  06D4  07FC               	addwf	___wmul@multiplicand+1,f
   983  06D5  084A               	movf	_paso,w
   984  06D6  01FB               	clrf	___wmul@multiplicand
   985  06D7  07FB               	addwf	___wmul@multiplicand,f
   986  06D8  247A               	fcall	___wmul
   987  06D9  087A               	movf	?___wmul+1,w
   988  06DA  0020               	movlb	0	; select bank0
   989  06DB  01BF               	clrf	_mover$470+1
   990  06DC  07BF               	addwf	_mover$470+1,f
   991  06DD  0879               	movf	?___wmul,w
   992  06DE  01BE               	clrf	_mover$470
   993  06DF  07BE               	addwf	_mover$470,f
   994                           
   995                           ;main.c: 153: delayS(paso*(60/rpm)*v);
   996  06E0  083F               	movf	_mover$470+1,w
   997  06E1  01FA               	clrf	___wmul@multiplier+1
   998  06E2  07FA               	addwf	___wmul@multiplier+1,f
   999  06E3  083E               	movf	_mover$470,w
  1000  06E4  01F9               	clrf	___wmul@multiplier
  1001  06E5  07F9               	addwf	___wmul@multiplier,f
  1002  06E6  083D               	movf	mover@v+1,w
  1003  06E7  01FC               	clrf	___wmul@multiplicand+1
  1004  06E8  07FC               	addwf	___wmul@multiplicand+1,f
  1005  06E9  083C               	movf	mover@v,w
  1006  06EA  01FB               	clrf	___wmul@multiplicand
  1007  06EB  07FB               	addwf	___wmul@multiplicand,f
  1008  06EC  247A               	fcall	___wmul
  1009  06ED  087A               	movf	?___wmul+1,w
  1010  06EE  0020               	movlb	0	; select bank0
  1011  06EF  01C1               	clrf	_mover$471+1
  1012  06F0  07C1               	addwf	_mover$471+1,f
  1013  06F1  0879               	movf	?___wmul,w
  1014  06F2  01C0               	clrf	_mover$471
  1015  06F3  07C0               	addwf	_mover$471,f
  1016                           
  1017                           ;main.c: 153: delayS(paso*(60/rpm)*v);
  1018  06F4  0841               	movf	_mover$471+1,w
  1019  06F5  01B8               	clrf	delayS@s+1
  1020  06F6  07B8               	addwf	delayS@s+1,f
  1021  06F7  0840               	movf	_mover$471,w
  1022  06F8  01B7               	clrf	delayS@s
  1023  06F9  07B7               	addwf	delayS@s,f
  1024  06FA  257A               	fcall	_delayS
  1025                           
  1026                           ;main.c: 154: PORTCbits.RC5=0;
  1027  06FB  0020               	movlb	0	; select bank0
  1028  06FC  128E               	bcf	14,5	;volatile
  1029  06FD  0008               	return
  1030  06FE                     __end_of_mover:	
  1031                           
  1032                           	psect	text7
  1033  057A                     __ptext7:	
  1034 ;; *************** function _delayS *****************
  1035 ;; Defined at:
  1036 ;;		line 72 in file "main.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  s               2   23[BANK0 ] int 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  ciclo_esp       3   25[BANK0 ] float 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;		None               void
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1
  1050 ;;      Params:         0       2       0
  1051 ;;      Locals:         0       3       0
  1052 ;;      Temps:          0       0       0
  1053 ;;      Totals:         0       5       0
  1054 ;;Total ram usage:        5 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    5
  1057 ;; This function calls:
  1058 ;;		___awtoft
  1059 ;;		___ftge
  1060 ;;		___ftsub
  1061 ;;		___wmul
  1062 ;;		_delayMs
  1063 ;; This function is called by:
  1064 ;;		_mover
  1065 ;;		_setup
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _delayS
  1071  057A                     _delayS:	
  1072                           
  1073                           ;main.c: 73: float ciclo_esp= s*1000;
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _delayS: [wreg+status,2+status,0+pclath+cstack]
  1077  057A  0020               	movlb	0	; select bank0
  1078  057B  0838               	movf	delayS@s+1,w
  1079  057C  01FA               	clrf	___wmul@multiplier+1
  1080  057D  07FA               	addwf	___wmul@multiplier+1,f
  1081  057E  0837               	movf	delayS@s,w
  1082  057F  01F9               	clrf	___wmul@multiplier
  1083  0580  07F9               	addwf	___wmul@multiplier,f
  1084  0581  30E8               	movlw	232
  1085  0582  00FB               	movwf	___wmul@multiplicand
  1086  0583  3003               	movlw	3
  1087  0584  00FC               	movwf	___wmul@multiplicand+1
  1088  0585  247A               	fcall	___wmul
  1089  0586  087A               	movf	?___wmul+1,w
  1090  0587  0020               	movlb	0	; select bank0
  1091  0588  01A3               	clrf	___awtoft@c+1
  1092  0589  07A3               	addwf	___awtoft@c+1,f
  1093  058A  0879               	movf	?___wmul,w
  1094  058B  01A2               	clrf	___awtoft@c
  1095  058C  07A2               	addwf	___awtoft@c,f
  1096  058D  249A               	fcall	___awtoft
  1097  058E  0020               	movlb	0	; select bank0
  1098  058F  0822               	movf	?___awtoft,w
  1099  0590  00B9               	movwf	delayS@ciclo_esp
  1100  0591  0823               	movf	?___awtoft+1,w
  1101  0592  00BA               	movwf	delayS@ciclo_esp+1
  1102  0593  0824               	movf	?___awtoft+2,w
  1103  0594                     L1:	
  1104  0594  00BB               	movwf	delayS@ciclo_esp+2
  1105  0595  3000               	movlw	0
  1106  0596  00F0               	movwf	___ftge@ff1
  1107  0597  3000               	movlw	0
  1108  0598  00F1               	movwf	___ftge@ff1+1
  1109  0599  3000               	movlw	0
  1110  059A  00F2               	movwf	___ftge@ff1+2
  1111  059B  0839               	movf	delayS@ciclo_esp,w
  1112  059C  00F3               	movwf	___ftge@ff2
  1113  059D  083A               	movf	delayS@ciclo_esp+1,w
  1114  059E  00F4               	movwf	___ftge@ff2+1
  1115  059F  083B               	movf	delayS@ciclo_esp+2,w
  1116  05A0  00F5               	movwf	___ftge@ff2+2
  1117  05A1  24BB               	fcall	___ftge
  1118  05A2  1803               	btfsc	3,0
  1119  05A3  0008               	return
  1120                           
  1121                           ;main.c: 76: delayMs(1);
  1122                           
  1123                           ;main.c: 75: while(ciclo_esp>0){
  1124  05A4  3001               	movlw	1
  1125  05A5  0020               	movlb	0	; select bank0
  1126  05A6  00B2               	movwf	delayMs@ms
  1127  05A7  3000               	movlw	0
  1128  05A8  00B3               	movwf	delayMs@ms+1
  1129  05A9  2535               	fcall	_delayMs
  1130                           
  1131                           ;main.c: 77: ciclo_esp--;
  1132  05AA  3000               	movlw	0
  1133  05AB  0020               	movlb	0	; select bank0
  1134  05AC  00A7               	movwf	___ftsub@f2
  1135  05AD  3080               	movlw	128
  1136  05AE  00A8               	movwf	___ftsub@f2+1
  1137  05AF  303F               	movlw	63
  1138  05B0  00A9               	movwf	___ftsub@f2+2
  1139  05B1  0839               	movf	delayS@ciclo_esp,w
  1140  05B2  00AA               	movwf	___ftsub@f1
  1141  05B3  083A               	movf	delayS@ciclo_esp+1,w
  1142  05B4  00AB               	movwf	___ftsub@f1+1
  1143  05B5  083B               	movf	delayS@ciclo_esp+2,w
  1144  05B6  00AC               	movwf	___ftsub@f1+2
  1145  05B7  244A               	fcall	___ftsub
  1146  05B8  0020               	movlb	0	; select bank0
  1147  05B9  0827               	movf	?___ftsub,w
  1148  05BA  00B9               	movwf	delayS@ciclo_esp
  1149  05BB  0828               	movf	?___ftsub+1,w
  1150  05BC  00BA               	movwf	delayS@ciclo_esp+1
  1151  05BD  0829               	movf	?___ftsub+2,w
  1152  05BE  2D94               	goto	L1
  1153  05BF                     __end_of_delayS:	
  1154                           
  1155                           	psect	text8
  1156  0535                     __ptext8:	
  1157 ;; *************** function _delayMs *****************
  1158 ;; Defined at:
  1159 ;;		line 59 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  ms              2   18[BANK0 ] int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  ciclo_esp       3   20[BANK0 ] float 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;		None               void
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1
  1173 ;;      Params:         0       2       0
  1174 ;;      Locals:         0       3       0
  1175 ;;      Temps:          0       0       0
  1176 ;;      Totals:         0       5       0
  1177 ;;Total ram usage:        5 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		___awtoft
  1182 ;;		___ftge
  1183 ;;		___ftsub
  1184 ;;		___wmul
  1185 ;;		_delayUs
  1186 ;; This function is called by:
  1187 ;;		_delayS
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _delayMs
  1193  0535                     _delayMs:	
  1194                           
  1195                           ;main.c: 60: float ciclo_esp= ms*1000;
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _delayMs: [wreg+status,2+status,0+pclath+cstack]
  1199  0535  0020               	movlb	0	; select bank0
  1200  0536  0833               	movf	delayMs@ms+1,w
  1201  0537  01FA               	clrf	___wmul@multiplier+1
  1202  0538  07FA               	addwf	___wmul@multiplier+1,f
  1203  0539  0832               	movf	delayMs@ms,w
  1204  053A  01F9               	clrf	___wmul@multiplier
  1205  053B  07F9               	addwf	___wmul@multiplier,f
  1206  053C  30E8               	movlw	232
  1207  053D  00FB               	movwf	___wmul@multiplicand
  1208  053E  3003               	movlw	3
  1209  053F  00FC               	movwf	___wmul@multiplicand+1
  1210  0540  247A               	fcall	___wmul
  1211  0541  087A               	movf	?___wmul+1,w
  1212  0542  0020               	movlb	0	; select bank0
  1213  0543  01A3               	clrf	___awtoft@c+1
  1214  0544  07A3               	addwf	___awtoft@c+1,f
  1215  0545  0879               	movf	?___wmul,w
  1216  0546  01A2               	clrf	___awtoft@c
  1217  0547  07A2               	addwf	___awtoft@c,f
  1218  0548  249A               	fcall	___awtoft
  1219  0549  0020               	movlb	0	; select bank0
  1220  054A  0822               	movf	?___awtoft,w
  1221  054B  00B4               	movwf	delayMs@ciclo_esp
  1222  054C  0823               	movf	?___awtoft+1,w
  1223  054D  00B5               	movwf	delayMs@ciclo_esp+1
  1224  054E  0824               	movf	?___awtoft+2,w
  1225  054F                     L2:	
  1226  054F  00B6               	movwf	delayMs@ciclo_esp+2
  1227  0550  3000               	movlw	0
  1228  0551  00F0               	movwf	___ftge@ff1
  1229  0552  3000               	movlw	0
  1230  0553  00F1               	movwf	___ftge@ff1+1
  1231  0554  3000               	movlw	0
  1232  0555  00F2               	movwf	___ftge@ff1+2
  1233  0556  0834               	movf	delayMs@ciclo_esp,w
  1234  0557  00F3               	movwf	___ftge@ff2
  1235  0558  0835               	movf	delayMs@ciclo_esp+1,w
  1236  0559  00F4               	movwf	___ftge@ff2+1
  1237  055A  0836               	movf	delayMs@ciclo_esp+2,w
  1238  055B  00F5               	movwf	___ftge@ff2+2
  1239  055C  24BB               	fcall	___ftge
  1240  055D  1803               	btfsc	3,0
  1241  055E  0008               	return
  1242                           
  1243                           ;main.c: 63: delayUs(1);
  1244                           
  1245                           ;main.c: 62: while(ciclo_esp>0){
  1246  055F  3001               	movlw	1
  1247  0560  0020               	movlb	0	; select bank0
  1248  0561  00AD               	movwf	delayUs@us
  1249  0562  3000               	movlw	0
  1250  0563  00AE               	movwf	delayUs@us+1
  1251  0564  24F6               	fcall	_delayUs
  1252                           
  1253                           ;main.c: 64: ciclo_esp--;
  1254  0565  3000               	movlw	0
  1255  0566  0020               	movlb	0	; select bank0
  1256  0567  00A7               	movwf	___ftsub@f2
  1257  0568  3080               	movlw	128
  1258  0569  00A8               	movwf	___ftsub@f2+1
  1259  056A  303F               	movlw	63
  1260  056B  00A9               	movwf	___ftsub@f2+2
  1261  056C  0834               	movf	delayMs@ciclo_esp,w
  1262  056D  00AA               	movwf	___ftsub@f1
  1263  056E  0835               	movf	delayMs@ciclo_esp+1,w
  1264  056F  00AB               	movwf	___ftsub@f1+1
  1265  0570  0836               	movf	delayMs@ciclo_esp+2,w
  1266  0571  00AC               	movwf	___ftsub@f1+2
  1267  0572  244A               	fcall	___ftsub
  1268  0573  0020               	movlb	0	; select bank0
  1269  0574  0827               	movf	?___ftsub,w
  1270  0575  00B4               	movwf	delayMs@ciclo_esp
  1271  0576  0828               	movf	?___ftsub+1,w
  1272  0577  00B5               	movwf	delayMs@ciclo_esp+1
  1273  0578  0829               	movf	?___ftsub+2,w
  1274  0579  2D4F               	goto	L2
  1275  057A                     __end_of_delayMs:	
  1276                           
  1277                           	psect	text9
  1278  04F6                     __ptext9:	
  1279 ;; *************** function _delayUs *****************
  1280 ;; Defined at:
  1281 ;;		line 47 in file "main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  us              2   13[BANK0 ] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  ciclo_esp       3   15[BANK0 ] float 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;		None               void
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1
  1295 ;;      Params:         0       2       0
  1296 ;;      Locals:         0       3       0
  1297 ;;      Temps:          0       0       0
  1298 ;;      Totals:         0       5       0
  1299 ;;Total ram usage:        5 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    3
  1302 ;; This function calls:
  1303 ;;		___awtoft
  1304 ;;		___ftge
  1305 ;;		___ftsub
  1306 ;;		___wmul
  1307 ;; This function is called by:
  1308 ;;		_delayMs
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _delayUs
  1314  04F6                     _delayUs:	
  1315                           
  1316                           ;main.c: 48: float ciclo_esp= us*(160);
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _delayUs: [wreg+status,2+status,0+pclath+cstack]
  1320  04F6  0020               	movlb	0	; select bank0
  1321  04F7  082E               	movf	delayUs@us+1,w
  1322  04F8  01FA               	clrf	___wmul@multiplier+1
  1323  04F9  07FA               	addwf	___wmul@multiplier+1,f
  1324  04FA  082D               	movf	delayUs@us,w
  1325  04FB  01F9               	clrf	___wmul@multiplier
  1326  04FC  07F9               	addwf	___wmul@multiplier,f
  1327  04FD  30A0               	movlw	160
  1328  04FE  00FB               	movwf	___wmul@multiplicand
  1329  04FF  3000               	movlw	0
  1330  0500  00FC               	movwf	___wmul@multiplicand+1
  1331  0501  247A               	fcall	___wmul
  1332  0502  087A               	movf	?___wmul+1,w
  1333  0503  0020               	movlb	0	; select bank0
  1334  0504  01A3               	clrf	___awtoft@c+1
  1335  0505  07A3               	addwf	___awtoft@c+1,f
  1336  0506  0879               	movf	?___wmul,w
  1337  0507  01A2               	clrf	___awtoft@c
  1338  0508  07A2               	addwf	___awtoft@c,f
  1339  0509  249A               	fcall	___awtoft
  1340  050A  0020               	movlb	0	; select bank0
  1341  050B  0822               	movf	?___awtoft,w
  1342  050C  00AF               	movwf	delayUs@ciclo_esp
  1343  050D  0823               	movf	?___awtoft+1,w
  1344  050E  00B0               	movwf	delayUs@ciclo_esp+1
  1345  050F  0824               	movf	?___awtoft+2,w
  1346  0510                     L3:	
  1347  0510  00B1               	movwf	delayUs@ciclo_esp+2
  1348  0511  3000               	movlw	0
  1349  0512  00F0               	movwf	___ftge@ff1
  1350  0513  3000               	movlw	0
  1351  0514  00F1               	movwf	___ftge@ff1+1
  1352  0515  3000               	movlw	0
  1353  0516  00F2               	movwf	___ftge@ff1+2
  1354  0517  082F               	movf	delayUs@ciclo_esp,w
  1355  0518  00F3               	movwf	___ftge@ff2
  1356  0519  0830               	movf	delayUs@ciclo_esp+1,w
  1357  051A  00F4               	movwf	___ftge@ff2+1
  1358  051B  0831               	movf	delayUs@ciclo_esp+2,w
  1359  051C  00F5               	movwf	___ftge@ff2+2
  1360  051D  24BB               	fcall	___ftge
  1361  051E  1803               	btfsc	3,0
  1362  051F  0008               	return
  1363                           
  1364                           ;main.c: 51: ciclo_esp--;
  1365                           
  1366                           ;main.c: 50: while(ciclo_esp>0){
  1367  0520  3000               	movlw	0
  1368  0521  0020               	movlb	0	; select bank0
  1369  0522  00A7               	movwf	___ftsub@f2
  1370  0523  3080               	movlw	128
  1371  0524  00A8               	movwf	___ftsub@f2+1
  1372  0525  303F               	movlw	63
  1373  0526  00A9               	movwf	___ftsub@f2+2
  1374  0527  082F               	movf	delayUs@ciclo_esp,w
  1375  0528  00AA               	movwf	___ftsub@f1
  1376  0529  0830               	movf	delayUs@ciclo_esp+1,w
  1377  052A  00AB               	movwf	___ftsub@f1+1
  1378  052B  0831               	movf	delayUs@ciclo_esp+2,w
  1379  052C  00AC               	movwf	___ftsub@f1+2
  1380  052D  244A               	fcall	___ftsub
  1381  052E  0020               	movlb	0	; select bank0
  1382  052F  0827               	movf	?___ftsub,w
  1383  0530  00AF               	movwf	delayUs@ciclo_esp
  1384  0531  0828               	movf	?___ftsub+1,w
  1385  0532  00B0               	movwf	delayUs@ciclo_esp+1
  1386  0533  0829               	movf	?___ftsub+2,w
  1387  0534  2D10               	goto	L3
  1388  0535                     __end_of_delayUs:	
  1389                           
  1390                           	psect	text10
  1391  047A                     __ptext10:	
  1392 ;; *************** function ___wmul *****************
  1393 ;; Defined at:
  1394 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  multiplier      2    9[COMMON] unsigned int 
  1397 ;;  multiplicand    2   11[COMMON] unsigned int 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  product         2    0[BANK0 ] unsigned int 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2    9[COMMON] unsigned int 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         4       0       0
  1410 ;;      Locals:         0       2       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         4       2       0
  1413 ;;Total ram usage:        6 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_delayUs
  1419 ;;		_delayMs
  1420 ;;		_delayS
  1421 ;;		_mover
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function ___wmul
  1427  047A                     ___wmul:	
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1431  047A  0020               	movlb	0	; select bank0
  1432  047B  01A0               	clrf	___wmul@product
  1433  047C  01A1               	clrf	___wmul@product+1
  1434  047D                     l1218:	
  1435  047D  1C79               	btfss	___wmul@multiplier,0
  1436  047E  2C84               	goto	l422
  1437  047F  087B               	movf	___wmul@multiplicand,w
  1438  0480  0020               	movlb	0	; select bank0
  1439  0481  07A0               	addwf	___wmul@product,f
  1440  0482  087C               	movf	___wmul@multiplicand+1,w
  1441  0483  3DA1               	addwfc	___wmul@product+1,f
  1442  0484                     l422:	
  1443  0484  3001               	movlw	1
  1444  0485                     u1075:	
  1445  0485  35FB               	lslf	___wmul@multiplicand,f
  1446  0486  0DFC               	rlf	___wmul@multiplicand+1,f
  1447  0487  0B89               	decfsz	9,f
  1448  0488  2C85               	goto	u1075
  1449  0489  3001               	movlw	1
  1450  048A                     u1085:	
  1451  048A  36FA               	lsrf	___wmul@multiplier+1,f
  1452  048B  0CF9               	rrf	___wmul@multiplier,f
  1453  048C  0B89               	decfsz	9,f
  1454  048D  2C8A               	goto	u1085
  1455  048E  087A               	movf	___wmul@multiplier+1,w
  1456  048F  0479               	iorwf	___wmul@multiplier,w
  1457  0490  1D03               	skipz
  1458  0491  2C7D               	goto	l1218
  1459  0492  0020               	movlb	0	; select bank0
  1460  0493  0821               	movf	___wmul@product+1,w
  1461  0494  01FA               	clrf	?___wmul+1
  1462  0495  07FA               	addwf	?___wmul+1,f
  1463  0496  0820               	movf	___wmul@product,w
  1464  0497  01F9               	clrf	?___wmul
  1465  0498  07F9               	addwf	?___wmul,f
  1466  0499  0008               	return
  1467  049A                     __end_of___wmul:	
  1468                           
  1469                           	psect	text11
  1470  044A                     __ptext11:	
  1471 ;; *************** function ___ftsub *****************
  1472 ;; Defined at:
  1473 ;;		line 18 in file "/opt/microchip/xc8/v1.30/sources/common/ftsub.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  f2              3    7[BANK0 ] float 
  1476 ;;  f1              3   10[BANK0 ] float 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  3    7[BANK0 ] float 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1
  1488 ;;      Params:         0       6       0
  1489 ;;      Locals:         0       0       0
  1490 ;;      Temps:          0       0       0
  1491 ;;      Totals:         0       6       0
  1492 ;;Total ram usage:        6 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    2
  1495 ;; This function calls:
  1496 ;;		___ftadd
  1497 ;; This function is called by:
  1498 ;;		_delayUs
  1499 ;;		_delayMs
  1500 ;;		_delayS
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function ___ftsub
  1506  044A                     ___ftsub:	
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  1510  044A  3080               	movlw	128
  1511  044B  0020               	movlb	0	; select bank0
  1512  044C  06A9               	xorwf	___ftsub@f2+2,f
  1513  044D  082A               	movf	___ftsub@f1,w
  1514  044E  00F8               	movwf	___ftadd@f1
  1515  044F  082B               	movf	___ftsub@f1+1,w
  1516  0450  00F9               	movwf	___ftadd@f1+1
  1517  0451  082C               	movf	___ftsub@f1+2,w
  1518  0452  00FA               	movwf	___ftadd@f1+2
  1519  0453  0827               	movf	___ftsub@f2,w
  1520  0454  00FB               	movwf	___ftadd@f2
  1521  0455  0828               	movf	___ftsub@f2+1,w
  1522  0456  00FC               	movwf	___ftadd@f2+1
  1523  0457  0829               	movf	___ftsub@f2+2,w
  1524  0458  00FD               	movwf	___ftadd@f2+2
  1525  0459  26FE               	fcall	___ftadd
  1526  045A  0878               	movf	?___ftadd,w
  1527  045B  0020               	movlb	0	; select bank0
  1528  045C  00A7               	movwf	?___ftsub
  1529  045D  0879               	movf	?___ftadd+1,w
  1530  045E  00A8               	movwf	?___ftsub+1
  1531  045F  087A               	movf	?___ftadd+2,w
  1532  0460  00A9               	movwf	?___ftsub+2
  1533  0461  0008               	return
  1534  0462                     __end_of___ftsub:	
  1535                           
  1536                           	psect	text12
  1537  06FE                     __ptext12:	
  1538 ;; *************** function ___ftadd *****************
  1539 ;; Defined at:
  1540 ;;		line 86 in file "/opt/microchip/xc8/v1.30/sources/common/ftadd.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  f1              3    8[COMMON] float 
  1543 ;;  f2              3   11[COMMON] float 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  exp1            1    6[BANK0 ] unsigned char 
  1546 ;;  exp2            1    5[BANK0 ] unsigned char 
  1547 ;;  sign            1    4[BANK0 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  3    8[COMMON] float 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1
  1557 ;;      Params:         6       0       0
  1558 ;;      Locals:         0       3       0
  1559 ;;      Temps:          0       4       0
  1560 ;;      Totals:         6       7       0
  1561 ;;Total ram usage:       13 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    1
  1564 ;; This function calls:
  1565 ;;		___ftpack
  1566 ;; This function is called by:
  1567 ;;		___ftsub
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function ___ftadd
  1573  06FE                     ___ftadd:	
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1577  06FE  0878               	movf	___ftadd@f1,w
  1578  06FF  0020               	movlb	0	; select bank0
  1579  0700  00A0               	movwf	??___ftadd
  1580  0701  0879               	movf	___ftadd@f1+1,w
  1581  0702  00A1               	movwf	??___ftadd+1
  1582  0703  087A               	movf	___ftadd@f1+2,w
  1583  0704  00A2               	movwf	??___ftadd+2
  1584  0705  1003               	clrc
  1585  0706  0D21               	rlf	??___ftadd+1,w
  1586  0707  0D22               	rlf	??___ftadd+2,w
  1587  0708  00A3               	movwf	??___ftadd+3
  1588  0709  0823               	movf	??___ftadd+3,w
  1589  070A  00A6               	movwf	___ftadd@exp1
  1590  070B  087B               	movf	___ftadd@f2,w
  1591  070C  00A0               	movwf	??___ftadd
  1592  070D  087C               	movf	___ftadd@f2+1,w
  1593  070E  00A1               	movwf	??___ftadd+1
  1594  070F  087D               	movf	___ftadd@f2+2,w
  1595  0710  00A2               	movwf	??___ftadd+2
  1596  0711  1003               	clrc
  1597  0712  0D21               	rlf	??___ftadd+1,w
  1598  0713  0D22               	rlf	??___ftadd+2,w
  1599  0714  00A3               	movwf	??___ftadd+3
  1600  0715  0823               	movf	??___ftadd+3,w
  1601  0716  00A5               	movwf	___ftadd@exp2
  1602  0717  0826               	movf	___ftadd@exp1,w
  1603  0718  1903               	btfsc	3,2
  1604  0719  2F26               	goto	l1152
  1605  071A  0825               	movf	___ftadd@exp2,w
  1606  071B  0226               	subwf	___ftadd@exp1,w
  1607  071C  1803               	skipnc
  1608  071D  2F2D               	goto	l1156
  1609  071E  0326               	decf	___ftadd@exp1,w
  1610  071F  3AFF               	xorlw	255
  1611  0720  0725               	addwf	___ftadd@exp2,w
  1612  0721  00A0               	movwf	??___ftadd
  1613  0722  3019               	movlw	25
  1614  0723  0220               	subwf	??___ftadd,w
  1615  0724  1C03               	skipc
  1616  0725  2F2D               	goto	l1156
  1617  0726                     l1152:	
  1618  0726  087B               	movf	___ftadd@f2,w
  1619  0727  00F8               	movwf	?___ftadd
  1620  0728  087C               	movf	___ftadd@f2+1,w
  1621  0729  00F9               	movwf	?___ftadd+1
  1622  072A  087D               	movf	___ftadd@f2+2,w
  1623  072B  00FA               	movwf	?___ftadd+2
  1624  072C  0008               	return
  1625  072D                     l1156:	
  1626  072D  0825               	movf	___ftadd@exp2,w
  1627  072E  1903               	btfsc	3,2
  1628  072F  0008               	return
  1629  0730  0826               	movf	___ftadd@exp1,w
  1630  0731  0225               	subwf	___ftadd@exp2,w
  1631  0732  1803               	skipnc
  1632  0733  2F3C               	goto	l1162
  1633  0734  0325               	decf	___ftadd@exp2,w
  1634  0735  3AFF               	xorlw	255
  1635  0736  0726               	addwf	___ftadd@exp1,w
  1636  0737  00A0               	movwf	??___ftadd
  1637  0738  3019               	movlw	25
  1638  0739  0220               	subwf	??___ftadd,w
  1639  073A  1803               	btfsc	3,0
  1640  073B  0008               	return
  1641  073C                     l1162:	
  1642  073C  3006               	movlw	6
  1643  073D  00A0               	movwf	??___ftadd
  1644  073E  0820               	movf	??___ftadd,w
  1645  073F  00A4               	movwf	___ftadd@sign
  1646  0740  1BFA               	btfsc	___ftadd@f1+2,7
  1647  0741  17A4               	bsf	___ftadd@sign,7
  1648  0742  1BFD               	btfsc	___ftadd@f2+2,7
  1649  0743  1724               	bsf	___ftadd@sign,6
  1650  0744  17F9               	bsf	___ftadd@f1+1,7
  1651  0745  30FF               	movlw	255
  1652  0746  05F8               	andwf	___ftadd@f1,f
  1653  0747  30FF               	movlw	255
  1654  0748  05F9               	andwf	___ftadd@f1+1,f
  1655  0749  3000               	movlw	0
  1656  074A  05FA               	andwf	___ftadd@f1+2,f
  1657  074B  17FC               	bsf	___ftadd@f2+1,7
  1658  074C  30FF               	movlw	255
  1659  074D  05FB               	andwf	___ftadd@f2,f
  1660  074E  30FF               	movlw	255
  1661  074F  05FC               	andwf	___ftadd@f2+1,f
  1662  0750  3000               	movlw	0
  1663  0751  05FD               	andwf	___ftadd@f2+2,f
  1664  0752  0825               	movf	___ftadd@exp2,w
  1665  0753  0226               	subwf	___ftadd@exp1,w
  1666  0754  1803               	skipnc
  1667  0755  2F78               	goto	l1184
  1668  0756                     l1174:	
  1669  0756  3001               	movlw	1
  1670  0757                     u925:	
  1671  0757  35FB               	lslf	___ftadd@f2,f
  1672  0758  0DFC               	rlf	___ftadd@f2+1,f
  1673  0759  0DFD               	rlf	___ftadd@f2+2,f
  1674  075A  0B89               	decfsz	9,f
  1675  075B  2F57               	goto	u925
  1676  075C  3001               	movlw	1
  1677  075D  02A5               	subwf	___ftadd@exp2,f
  1678  075E  0825               	movf	___ftadd@exp2,w
  1679  075F  0626               	xorwf	___ftadd@exp1,w
  1680  0760  1903               	skipnz
  1681  0761  2F73               	goto	l1182
  1682  0762  3001               	movlw	1
  1683  0763  02A4               	subwf	___ftadd@sign,f
  1684  0764  0824               	movf	___ftadd@sign,w
  1685  0765  3907               	andlw	7
  1686  0766  1903               	btfsc	3,2
  1687  0767  2F73               	goto	l1182
  1688  0768  2F56               	goto	l1174
  1689  0769                     l1180:	
  1690  0769  3001               	movlw	1
  1691  076A                     u955:	
  1692  076A  36FA               	lsrf	___ftadd@f1+2,f
  1693  076B  0CF9               	rrf	___ftadd@f1+1,f
  1694  076C  0CF8               	rrf	___ftadd@f1,f
  1695  076D  0B89               	decfsz	9,f
  1696  076E  2F6A               	goto	u955
  1697  076F  3001               	movlw	1
  1698  0770  00A0               	movwf	??___ftadd
  1699  0771  0820               	movf	??___ftadd,w
  1700  0772  07A6               	addwf	___ftadd@exp1,f
  1701  0773                     l1182:	
  1702  0773  0826               	movf	___ftadd@exp1,w
  1703  0774  0625               	xorwf	___ftadd@exp2,w
  1704  0775  1903               	btfsc	3,2
  1705  0776  2F9D               	goto	l245
  1706  0777  2F69               	goto	l1180
  1707  0778                     l1184:	
  1708  0778  0826               	movf	___ftadd@exp1,w
  1709  0779  0225               	subwf	___ftadd@exp2,w
  1710  077A  1803               	skipnc
  1711  077B  2F9D               	goto	l245
  1712  077C                     l1186:	
  1713  077C  3001               	movlw	1
  1714  077D                     u985:	
  1715  077D  35F8               	lslf	___ftadd@f1,f
  1716  077E  0DF9               	rlf	___ftadd@f1+1,f
  1717  077F  0DFA               	rlf	___ftadd@f1+2,f
  1718  0780  0B89               	decfsz	9,f
  1719  0781  2F7D               	goto	u985
  1720  0782  3001               	movlw	1
  1721  0783  02A6               	subwf	___ftadd@exp1,f
  1722  0784  0825               	movf	___ftadd@exp2,w
  1723  0785  0626               	xorwf	___ftadd@exp1,w
  1724  0786  1903               	skipnz
  1725  0787  2F99               	goto	l1194
  1726  0788  3001               	movlw	1
  1727  0789  02A4               	subwf	___ftadd@sign,f
  1728  078A  0824               	movf	___ftadd@sign,w
  1729  078B  3907               	andlw	7
  1730  078C  1903               	btfsc	3,2
  1731  078D  2F99               	goto	l1194
  1732  078E  2F7C               	goto	l1186
  1733  078F                     l1192:	
  1734  078F  3001               	movlw	1
  1735  0790                     u1015:	
  1736  0790  36FD               	lsrf	___ftadd@f2+2,f
  1737  0791  0CFC               	rrf	___ftadd@f2+1,f
  1738  0792  0CFB               	rrf	___ftadd@f2,f
  1739  0793  0B89               	decfsz	9,f
  1740  0794  2F90               	goto	u1015
  1741  0795  3001               	movlw	1
  1742  0796  00A0               	movwf	??___ftadd
  1743  0797  0820               	movf	??___ftadd,w
  1744  0798  07A5               	addwf	___ftadd@exp2,f
  1745  0799                     l1194:	
  1746  0799  0826               	movf	___ftadd@exp1,w
  1747  079A  0625               	xorwf	___ftadd@exp2,w
  1748  079B  1D03               	skipz
  1749  079C  2F8F               	goto	l1192
  1750  079D                     l245:	
  1751  079D  1FA4               	btfss	___ftadd@sign,7
  1752  079E  2FAF               	goto	l1198
  1753  079F  30FF               	movlw	255
  1754  07A0  06F8               	xorwf	___ftadd@f1,f
  1755  07A1  30FF               	movlw	255
  1756  07A2  06F9               	xorwf	___ftadd@f1+1,f
  1757  07A3  30FF               	movlw	255
  1758  07A4  06FA               	xorwf	___ftadd@f1+2,f
  1759  07A5  3001               	movlw	1
  1760  07A6  07F8               	addwf	___ftadd@f1,f
  1761  07A7  3000               	movlw	0
  1762  07A8  1803               	skipnc
  1763  07A9  3001               	movlw	1
  1764  07AA  07F9               	addwf	___ftadd@f1+1,f
  1765  07AB  3000               	movlw	0
  1766  07AC  1803               	skipnc
  1767  07AD  3001               	movlw	1
  1768  07AE  07FA               	addwf	___ftadd@f1+2,f
  1769  07AF                     l1198:	
  1770  07AF  1F24               	btfss	___ftadd@sign,6
  1771  07B0  2FC1               	goto	l1202
  1772  07B1  30FF               	movlw	255
  1773  07B2  06FB               	xorwf	___ftadd@f2,f
  1774  07B3  30FF               	movlw	255
  1775  07B4  06FC               	xorwf	___ftadd@f2+1,f
  1776  07B5  30FF               	movlw	255
  1777  07B6  06FD               	xorwf	___ftadd@f2+2,f
  1778  07B7  3001               	movlw	1
  1779  07B8  07FB               	addwf	___ftadd@f2,f
  1780  07B9  3000               	movlw	0
  1781  07BA  1803               	skipnc
  1782  07BB  3001               	movlw	1
  1783  07BC  07FC               	addwf	___ftadd@f2+1,f
  1784  07BD  3000               	movlw	0
  1785  07BE  1803               	skipnc
  1786  07BF  3001               	movlw	1
  1787  07C0  07FD               	addwf	___ftadd@f2+2,f
  1788  07C1                     l1202:	
  1789  07C1  01A4               	clrf	___ftadd@sign
  1790  07C2  0878               	movf	___ftadd@f1,w
  1791  07C3  07FB               	addwf	___ftadd@f2,f
  1792  07C4  0879               	movf	___ftadd@f1+1,w
  1793  07C5  3DFC               	addwfc	___ftadd@f2+1,f
  1794  07C6  087A               	movf	___ftadd@f1+2,w
  1795  07C7  3DFD               	addwfc	___ftadd@f2+2,f
  1796  07C8  1FFD               	btfss	___ftadd@f2+2,7
  1797  07C9  2FDC               	goto	l1212
  1798  07CA  30FF               	movlw	255
  1799  07CB  06FB               	xorwf	___ftadd@f2,f
  1800  07CC  30FF               	movlw	255
  1801  07CD  06FC               	xorwf	___ftadd@f2+1,f
  1802  07CE  30FF               	movlw	255
  1803  07CF  06FD               	xorwf	___ftadd@f2+2,f
  1804  07D0  3001               	movlw	1
  1805  07D1  07FB               	addwf	___ftadd@f2,f
  1806  07D2  3000               	movlw	0
  1807  07D3  1803               	skipnc
  1808  07D4  3001               	movlw	1
  1809  07D5  07FC               	addwf	___ftadd@f2+1,f
  1810  07D6  3000               	movlw	0
  1811  07D7  1803               	skipnc
  1812  07D8  3001               	movlw	1
  1813  07D9  07FD               	addwf	___ftadd@f2+2,f
  1814  07DA  01A4               	clrf	___ftadd@sign
  1815  07DB  0AA4               	incf	___ftadd@sign,f
  1816  07DC                     l1212:	
  1817  07DC  087B               	movf	___ftadd@f2,w
  1818  07DD  00F0               	movwf	___ftpack@arg
  1819  07DE  087C               	movf	___ftadd@f2+1,w
  1820  07DF  00F1               	movwf	___ftpack@arg+1
  1821  07E0  087D               	movf	___ftadd@f2+2,w
  1822  07E1  00F2               	movwf	___ftpack@arg+2
  1823  07E2  0826               	movf	___ftadd@exp1,w
  1824  07E3  00A0               	movwf	??___ftadd
  1825  07E4  0820               	movf	??___ftadd,w
  1826  07E5  00F3               	movwf	___ftpack@exp
  1827  07E6  0824               	movf	___ftadd@sign,w
  1828  07E7  00A1               	movwf	??___ftadd+1
  1829  07E8  0821               	movf	??___ftadd+1,w
  1830  07E9  00F4               	movwf	___ftpack@sign
  1831  07EA  2612               	fcall	___ftpack
  1832  07EB  0870               	movf	?___ftpack,w
  1833  07EC  00F8               	movwf	?___ftadd
  1834  07ED  0871               	movf	?___ftpack+1,w
  1835  07EE  00F9               	movwf	?___ftadd+1
  1836  07EF  0872               	movf	?___ftpack+2,w
  1837  07F0  00FA               	movwf	?___ftadd+2
  1838  07F1  0008               	return
  1839  07F2                     __end_of___ftadd:	
  1840                           
  1841                           	psect	text13
  1842  04BB                     __ptext13:	
  1843 ;; *************** function ___ftge *****************
  1844 ;; Defined at:
  1845 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/ftge.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  ff1             3    0[COMMON] float 
  1848 ;;  ff2             3    3[COMMON] float 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1
  1860 ;;      Params:         6       0       0
  1861 ;;      Locals:         0       0       0
  1862 ;;      Temps:          3       0       0
  1863 ;;      Totals:         9       0       0
  1864 ;;Total ram usage:        9 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_delayUs
  1870 ;;		_delayMs
  1871 ;;		_delayS
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function ___ftge
  1877  04BB                     ___ftge:	
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1881  04BB  1FF2               	btfss	___ftge@ff1+2,7
  1882  04BC  2CD1               	goto	l1116
  1883  04BD  0970               	comf	___ftge@ff1,w
  1884  04BE  00F6               	movwf	??___ftge
  1885  04BF  0971               	comf	___ftge@ff1+1,w
  1886  04C0  00F7               	movwf	??___ftge+1
  1887  04C1  0972               	comf	___ftge@ff1+2,w
  1888  04C2  00F8               	movwf	??___ftge+2
  1889  04C3  0AF6               	incf	??___ftge,f
  1890  04C4  1903               	skipnz
  1891  04C5  0AF7               	incf	??___ftge+1,f
  1892  04C6  1903               	skipnz
  1893  04C7  0AF8               	incf	??___ftge+2,f
  1894  04C8  3000               	movlw	0
  1895  04C9  0776               	addwf	??___ftge,w
  1896  04CA  00F0               	movwf	___ftge@ff1
  1897  04CB  3000               	movlw	0
  1898  04CC  3D77               	addwfc	??___ftge+1,w
  1899  04CD  00F1               	movwf	___ftge@ff1+1
  1900  04CE  3080               	movlw	128
  1901  04CF  3D78               	addwfc	??___ftge+2,w
  1902  04D0  00F2               	movwf	___ftge@ff1+2
  1903  04D1                     l1116:	
  1904  04D1  1FF5               	btfss	___ftge@ff2+2,7
  1905  04D2  2CE7               	goto	l1120
  1906  04D3  0973               	comf	___ftge@ff2,w
  1907  04D4  00F6               	movwf	??___ftge
  1908  04D5  0974               	comf	___ftge@ff2+1,w
  1909  04D6  00F7               	movwf	??___ftge+1
  1910  04D7  0975               	comf	___ftge@ff2+2,w
  1911  04D8  00F8               	movwf	??___ftge+2
  1912  04D9  0AF6               	incf	??___ftge,f
  1913  04DA  1903               	skipnz
  1914  04DB  0AF7               	incf	??___ftge+1,f
  1915  04DC  1903               	skipnz
  1916  04DD  0AF8               	incf	??___ftge+2,f
  1917  04DE  3000               	movlw	0
  1918  04DF  0776               	addwf	??___ftge,w
  1919  04E0  00F3               	movwf	___ftge@ff2
  1920  04E1  3000               	movlw	0
  1921  04E2  3D77               	addwfc	??___ftge+1,w
  1922  04E3  00F4               	movwf	___ftge@ff2+1
  1923  04E4  3080               	movlw	128
  1924  04E5  3D78               	addwfc	??___ftge+2,w
  1925  04E6  00F5               	movwf	___ftge@ff2+2
  1926  04E7                     l1120:	
  1927  04E7  3080               	movlw	128
  1928  04E8  06F2               	xorwf	___ftge@ff1+2,f
  1929  04E9  3080               	movlw	128
  1930  04EA  06F5               	xorwf	___ftge@ff2+2,f
  1931  04EB  0875               	movf	___ftge@ff2+2,w
  1932  04EC  0272               	subwf	___ftge@ff1+2,w
  1933  04ED  1D03               	skipz
  1934  04EE  0008               	return
  1935  04EF  0874               	movf	___ftge@ff2+1,w
  1936  04F0  0271               	subwf	___ftge@ff1+1,w
  1937  04F1  1D03               	skipz
  1938  04F2  0008               	return
  1939  04F3  0873               	movf	___ftge@ff2,w
  1940  04F4  0270               	subwf	___ftge@ff1,w
  1941  04F5  0008               	return
  1942  04F6                     __end_of___ftge:	
  1943                           
  1944                           	psect	text14
  1945  049A                     __ptext14:	
  1946 ;; *************** function ___awtoft *****************
  1947 ;; Defined at:
  1948 ;;		line 32 in file "/opt/microchip/xc8/v1.30/sources/common/awtoft.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  c               2    2[BANK0 ] int 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  sign            1   13[COMMON] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  3    2[BANK0 ] float 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1
  1962 ;;      Params:         0       3       0
  1963 ;;      Locals:         1       0       0
  1964 ;;      Temps:          0       2       0
  1965 ;;      Totals:         1       5       0
  1966 ;;Total ram usage:        6 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    1
  1969 ;; This function calls:
  1970 ;;		___ftpack
  1971 ;; This function is called by:
  1972 ;;		_delayUs
  1973 ;;		_delayMs
  1974 ;;		_delayS
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function ___awtoft
  1980  049A                     ___awtoft:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1984  049A  01FD               	clrf	___awtoft@sign
  1985  049B  0020               	movlb	0	; select bank0
  1986  049C  1FA3               	btfss	___awtoft@c+1,7
  1987  049D  2CA5               	goto	l1140
  1988  049E  09A2               	comf	___awtoft@c,f
  1989  049F  09A3               	comf	___awtoft@c+1,f
  1990  04A0  0AA2               	incf	___awtoft@c,f
  1991  04A1  1903               	skipnz
  1992  04A2  0AA3               	incf	___awtoft@c+1,f
  1993  04A3  01FD               	clrf	___awtoft@sign
  1994  04A4  0AFD               	incf	___awtoft@sign,f
  1995  04A5                     l1140:	
  1996  04A5  0822               	movf	___awtoft@c,w
  1997  04A6  00F0               	movwf	___ftpack@arg
  1998  04A7  0823               	movf	___awtoft@c+1,w
  1999  04A8  00F1               	movwf	___ftpack@arg+1
  2000  04A9  01F2               	clrf	___ftpack@arg+2
  2001  04AA  308E               	movlw	142
  2002  04AB  00A5               	movwf	??___awtoft
  2003  04AC  0825               	movf	??___awtoft,w
  2004  04AD  00F3               	movwf	___ftpack@exp
  2005  04AE  087D               	movf	___awtoft@sign,w
  2006  04AF  00A6               	movwf	??___awtoft+1
  2007  04B0  0826               	movf	??___awtoft+1,w
  2008  04B1  00F4               	movwf	___ftpack@sign
  2009  04B2  2612               	fcall	___ftpack
  2010  04B3  0870               	movf	?___ftpack,w
  2011  04B4  0020               	movlb	0	; select bank0
  2012  04B5  00A2               	movwf	?___awtoft
  2013  04B6  0871               	movf	?___ftpack+1,w
  2014  04B7  00A3               	movwf	?___awtoft+1
  2015  04B8  0872               	movf	?___ftpack+2,w
  2016  04B9  00A4               	movwf	?___awtoft+2
  2017  04BA  0008               	return
  2018  04BB                     __end_of___awtoft:	
  2019                           
  2020                           	psect	text15
  2021  0612                     __ptext15:	
  2022 ;; *************** function ___ftpack *****************
  2023 ;; Defined at:
  2024 ;;		line 62 in file "/opt/microchip/xc8/v1.30/sources/common/float.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  arg             3    0[COMMON] unsigned um
  2027 ;;  exp             1    3[COMMON] unsigned char 
  2028 ;;  sign            1    4[COMMON] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  3    0[COMMON] float 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1
  2040 ;;      Params:         5       0       0
  2041 ;;      Locals:         0       0       0
  2042 ;;      Temps:          3       0       0
  2043 ;;      Totals:         8       0       0
  2044 ;;Total ram usage:        8 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		___awtoft
  2050 ;;		___ftadd
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           
  2055                           ;psect for function ___ftpack
  2056  0612                     ___ftpack:	
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2060  0612  0873               	movf	___ftpack@exp,w
  2061  0613  1903               	btfsc	3,2
  2062  0614  2E1A               	goto	l1042
  2063  0615  0872               	movf	___ftpack@arg+2,w
  2064  0616  0471               	iorwf	___ftpack@arg+1,w
  2065  0617  0470               	iorwf	___ftpack@arg,w
  2066  0618  1D03               	skipz
  2067  0619  2E2B               	goto	l1048
  2068  061A                     l1042:	
  2069  061A  3000               	movlw	0
  2070  061B  00F0               	movwf	?___ftpack
  2071  061C  3000               	movlw	0
  2072  061D  00F1               	movwf	?___ftpack+1
  2073  061E  3000               	movlw	0
  2074  061F  00F2               	movwf	?___ftpack+2
  2075  0620  0008               	return
  2076  0621                     l1046:	
  2077  0621  3001               	movlw	1
  2078  0622  00F5               	movwf	??___ftpack
  2079  0623  0875               	movf	??___ftpack,w
  2080  0624  07F3               	addwf	___ftpack@exp,f
  2081  0625  3001               	movlw	1
  2082  0626                     u605:	
  2083  0626  36F2               	lsrf	___ftpack@arg+2,f
  2084  0627  0CF1               	rrf	___ftpack@arg+1,f
  2085  0628  0CF0               	rrf	___ftpack@arg,f
  2086  0629  0B89               	decfsz	9,f
  2087  062A  2E26               	goto	u605
  2088  062B                     l1048:	
  2089  062B  30FE               	movlw	254
  2090  062C  0572               	andwf	___ftpack@arg+2,w
  2091  062D  1903               	btfsc	3,2
  2092  062E  2E44               	goto	l216
  2093  062F  2E21               	goto	l1046
  2094  0630                     l1050:	
  2095  0630  3001               	movlw	1
  2096  0631  00F5               	movwf	??___ftpack
  2097  0632  0875               	movf	??___ftpack,w
  2098  0633  07F3               	addwf	___ftpack@exp,f
  2099  0634  3001               	movlw	1
  2100  0635  07F0               	addwf	___ftpack@arg,f
  2101  0636  3000               	movlw	0
  2102  0637  1803               	skipnc
  2103  0638  3001               	movlw	1
  2104  0639  07F1               	addwf	___ftpack@arg+1,f
  2105  063A  3000               	movlw	0
  2106  063B  1803               	skipnc
  2107  063C  3001               	movlw	1
  2108  063D  07F2               	addwf	___ftpack@arg+2,f
  2109  063E  3001               	movlw	1
  2110  063F                     u625:	
  2111  063F  36F2               	lsrf	___ftpack@arg+2,f
  2112  0640  0CF1               	rrf	___ftpack@arg+1,f
  2113  0641  0CF0               	rrf	___ftpack@arg,f
  2114  0642  0B89               	decfsz	9,f
  2115  0643  2E3F               	goto	u625
  2116  0644                     l216:	
  2117  0644  30FF               	movlw	255
  2118  0645  0572               	andwf	___ftpack@arg+2,w
  2119  0646  1903               	btfsc	3,2
  2120  0647  2E51               	goto	l1058
  2121  0648  2E30               	goto	l1050
  2122  0649                     l1056:	
  2123  0649  3001               	movlw	1
  2124  064A  02F3               	subwf	___ftpack@exp,f
  2125  064B  3001               	movlw	1
  2126  064C                     u645:	
  2127  064C  35F0               	lslf	___ftpack@arg,f
  2128  064D  0DF1               	rlf	___ftpack@arg+1,f
  2129  064E  0DF2               	rlf	___ftpack@arg+2,f
  2130  064F  0B89               	decfsz	9,f
  2131  0650  2E4C               	goto	u645
  2132  0651                     l1058:	
  2133  0651  1FF1               	btfss	___ftpack@arg+1,7
  2134  0652  2E49               	goto	l1056
  2135  0653  1873               	btfsc	___ftpack@exp,0
  2136  0654  2E5B               	goto	l222
  2137  0655  30FF               	movlw	255
  2138  0656  05F0               	andwf	___ftpack@arg,f
  2139  0657  307F               	movlw	127
  2140  0658  05F1               	andwf	___ftpack@arg+1,f
  2141  0659  30FF               	movlw	255
  2142  065A  05F2               	andwf	___ftpack@arg+2,f
  2143  065B                     l222:	
  2144  065B  1003               	clrc
  2145  065C  0CF3               	rrf	___ftpack@exp,f
  2146  065D  0873               	movf	___ftpack@exp,w
  2147  065E  00F5               	movwf	??___ftpack
  2148  065F  01F6               	clrf	??___ftpack+1
  2149  0660  01F7               	clrf	??___ftpack+2
  2150  0661  3010               	movlw	16
  2151  0662                     u675:	
  2152  0662  35F5               	lslf	??___ftpack,f
  2153  0663  0DF6               	rlf	??___ftpack+1,f
  2154  0664  0DF7               	rlf	??___ftpack+2,f
  2155  0665  0B89               	decfsz	9,f
  2156  0666  2E62               	goto	u675
  2157  0667  0875               	movf	??___ftpack,w
  2158  0668  04F0               	iorwf	___ftpack@arg,f
  2159  0669  0876               	movf	??___ftpack+1,w
  2160  066A  04F1               	iorwf	___ftpack@arg+1,f
  2161  066B  0877               	movf	??___ftpack+2,w
  2162  066C  04F2               	iorwf	___ftpack@arg+2,f
  2163  066D  0874               	movf	___ftpack@sign,w
  2164  066E  1903               	btfsc	3,2
  2165  066F  0008               	return
  2166  0670  17F2               	bsf	___ftpack@arg+2,7
  2167  0671  0008               	return
  2168  0672                     __end_of___ftpack:	
  2169                           
  2170                           	psect	text16
  2171  05BF                     __ptext16:	
  2172 ;; *************** function ___awdiv *****************
  2173 ;; Defined at:
  2174 ;;		line 6 in file "/opt/microchip/xc8/v1.30/sources/common/awdiv.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  divisor         2    0[COMMON] int 
  2177 ;;  dividend        2    2[COMMON] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  quotient        2    7[COMMON] int 
  2180 ;;  sign            1    6[COMMON] unsigned char 
  2181 ;;  counter         1    5[COMMON] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  2    0[COMMON] int 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1
  2191 ;;      Params:         4       0       0
  2192 ;;      Locals:         4       0       0
  2193 ;;      Temps:          1       0       0
  2194 ;;      Totals:         9       0       0
  2195 ;;Total ram usage:        9 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_mover
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function ___awdiv
  2206  05BF                     ___awdiv:	
  2207                           
  2208                           ;incstack = 0
  2209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2210  05BF  01F6               	clrf	___awdiv@sign
  2211  05C0  1FF1               	btfss	___awdiv@divisor+1,7
  2212  05C1  2DC9               	goto	l1076
  2213  05C2  09F0               	comf	___awdiv@divisor,f
  2214  05C3  09F1               	comf	___awdiv@divisor+1,f
  2215  05C4  0AF0               	incf	___awdiv@divisor,f
  2216  05C5  1903               	skipnz
  2217  05C6  0AF1               	incf	___awdiv@divisor+1,f
  2218  05C7  01F6               	clrf	___awdiv@sign
  2219  05C8  0AF6               	incf	___awdiv@sign,f
  2220  05C9                     l1076:	
  2221  05C9  1FF3               	btfss	___awdiv@dividend+1,7
  2222  05CA  2DD4               	goto	l1082
  2223  05CB  09F2               	comf	___awdiv@dividend,f
  2224  05CC  09F3               	comf	___awdiv@dividend+1,f
  2225  05CD  0AF2               	incf	___awdiv@dividend,f
  2226  05CE  1903               	skipnz
  2227  05CF  0AF3               	incf	___awdiv@dividend+1,f
  2228  05D0  3001               	movlw	1
  2229  05D1  00F4               	movwf	??___awdiv
  2230  05D2  0874               	movf	??___awdiv,w
  2231  05D3  06F6               	xorwf	___awdiv@sign,f
  2232  05D4                     l1082:	
  2233  05D4  01F7               	clrf	___awdiv@quotient
  2234  05D5  01F8               	clrf	___awdiv@quotient+1
  2235  05D6  0871               	movf	___awdiv@divisor+1,w
  2236  05D7  0470               	iorwf	___awdiv@divisor,w
  2237  05D8  1903               	skipnz
  2238  05D9  2E03               	goto	l1104
  2239  05DA  01F5               	clrf	___awdiv@counter
  2240  05DB  0AF5               	incf	___awdiv@counter,f
  2241  05DC                     l1092:	
  2242  05DC  1BF1               	btfsc	___awdiv@divisor+1,7
  2243  05DD  2DE8               	goto	l1094
  2244  05DE  3001               	movlw	1
  2245  05DF                     u725:	
  2246  05DF  35F0               	lslf	___awdiv@divisor,f
  2247  05E0  0DF1               	rlf	___awdiv@divisor+1,f
  2248  05E1  0B89               	decfsz	9,f
  2249  05E2  2DDF               	goto	u725
  2250  05E3  3001               	movlw	1
  2251  05E4  00F4               	movwf	??___awdiv
  2252  05E5  0874               	movf	??___awdiv,w
  2253  05E6  07F5               	addwf	___awdiv@counter,f
  2254  05E7  2DDC               	goto	l1092
  2255  05E8                     l1094:	
  2256  05E8  3001               	movlw	1
  2257  05E9                     u745:	
  2258  05E9  35F7               	lslf	___awdiv@quotient,f
  2259  05EA  0DF8               	rlf	___awdiv@quotient+1,f
  2260  05EB  0B89               	decfsz	9,f
  2261  05EC  2DE9               	goto	u745
  2262  05ED  0871               	movf	___awdiv@divisor+1,w
  2263  05EE  0273               	subwf	___awdiv@dividend+1,w
  2264  05EF  1D03               	skipz
  2265  05F0  2DF3               	goto	u755
  2266  05F1  0870               	movf	___awdiv@divisor,w
  2267  05F2  0272               	subwf	___awdiv@dividend,w
  2268  05F3                     u755:	
  2269  05F3  1C03               	skipc
  2270  05F4  2DFA               	goto	l1100
  2271  05F5  0870               	movf	___awdiv@divisor,w
  2272  05F6  02F2               	subwf	___awdiv@dividend,f
  2273  05F7  0871               	movf	___awdiv@divisor+1,w
  2274  05F8  3BF3               	subwfb	___awdiv@dividend+1,f
  2275  05F9  1477               	bsf	___awdiv@quotient,0
  2276  05FA                     l1100:	
  2277  05FA  3001               	movlw	1
  2278  05FB                     u765:	
  2279  05FB  36F1               	lsrf	___awdiv@divisor+1,f
  2280  05FC  0CF0               	rrf	___awdiv@divisor,f
  2281  05FD  0B89               	decfsz	9,f
  2282  05FE  2DFB               	goto	u765
  2283  05FF  3001               	movlw	1
  2284  0600  02F5               	subwf	___awdiv@counter,f
  2285  0601  1D03               	btfss	3,2
  2286  0602  2DE8               	goto	l1094
  2287  0603                     l1104:	
  2288  0603  0876               	movf	___awdiv@sign,w
  2289  0604  1903               	btfsc	3,2
  2290  0605  2E0B               	goto	l1108
  2291  0606  09F7               	comf	___awdiv@quotient,f
  2292  0607  09F8               	comf	___awdiv@quotient+1,f
  2293  0608  0AF7               	incf	___awdiv@quotient,f
  2294  0609  1903               	skipnz
  2295  060A  0AF8               	incf	___awdiv@quotient+1,f
  2296  060B                     l1108:	
  2297  060B  0878               	movf	___awdiv@quotient+1,w
  2298  060C  01F1               	clrf	?___awdiv+1
  2299  060D  07F1               	addwf	?___awdiv+1,f
  2300  060E  0877               	movf	___awdiv@quotient,w
  2301  060F  01F0               	clrf	?___awdiv
  2302  0610  07F0               	addwf	?___awdiv,f
  2303  0611  0008               	return
  2304  0612                     __end_of___awdiv:	
  2305  007E                     btemp	set	126	;btemp
  2306  007E                     wtemp	set	126
  2307  007E                     wtemp0	set	126
  2308  0080                     wtemp1	set	128
  2309  0082                     wtemp2	set	130
  2310  0084                     wtemp3	set	132
  2311  0086                     wtemp4	set	134
  2312  0088                     wtemp5	set	136
  2313  007F                     wtemp6	set	127
  2314  007E                     ttemp	set	126
  2315  007E                     ttemp0	set	126
  2316  0081                     ttemp1	set	129
  2317  0084                     ttemp2	set	132
  2318  0087                     ttemp3	set	135
  2319  007F                     ttemp4	set	127
  2320  007E                     ltemp	set	126
  2321  007E                     ltemp0	set	126
  2322  0082                     ltemp1	set	130
  2323  0086                     ltemp2	set	134
  2324  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      46
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _delayS->___awtoft
    _delayMs->___awtoft
    _delayUs->___awtoft
    ___wmul->___awdiv
    ___ftsub->___ftadd
    ___ftadd->___ftpack
    ___awtoft->___wmul

Critical Paths under _main in BANK0

    _setup->_delayS
    _algoritmo1->_mover
    _mover->_delayS
    _delayS->_delayMs
    _delayMs->_delayUs
    _delayUs->___ftsub
    ___ftsub->___ftadd
    ___awtoft->___wmul

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4   38953
                                             34 BANK0      4     0      4
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   18652
                             _delayS
                        _medida_COMP
                               _vRef
 ---------------------------------------------------------------------------------
 (2) _vRef                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _medida_COMP                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   20301
                         _algoritmo1
 ---------------------------------------------------------------------------------
 (2) _algoritmo1                                           0     0      0   20301
                              _mover
 ---------------------------------------------------------------------------------
 (3) _mover                                               10     8      2   20301
                                             28 BANK0      6     4      2
                            ___awdiv
                             ___wmul
                             _delayS
 ---------------------------------------------------------------------------------
 (2) _delayS                                               5     3      2   18652
                                             23 BANK0      5     3      2
                            ___awdiv (ARG)
                           ___awtoft
                             ___ftge
                            ___ftsub
                             ___wmul
                            _delayMs
 ---------------------------------------------------------------------------------
 (3) _delayMs                                              5     3      2   12364
                                             18 BANK0      5     3      2
                           ___awtoft
                             ___ftge
                            ___ftsub
                             ___wmul
                            _delayUs
 ---------------------------------------------------------------------------------
 (4) _delayUs                                              5     3      2    6182
                                             13 BANK0      5     3      2
                           ___awtoft
                             ___ftge
                            ___ftsub
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     834
                                              9 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    2916
                                              7 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             13     7      6    2553
                                              8 COMMON     6     0      6
                                              0 BANK0      7     7      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     454
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             6     3      3    1857
                                             13 COMMON     1     1      0
                                              2 BANK0      5     2      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    1607
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _algoritmo1
       _mover
         ___awdiv
         ___wmul
           ___awdiv (ARG)
         _delayS
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftge (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
           _delayMs (ARG)
             ___awtoft
               ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
             ___ftge
             ___ftsub
               ___ftadd
                 ___ftpack
             ___wmul
               ___awdiv (ARG)
             _delayUs
               ___awtoft
                 ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
               ___ftge
               ___ftsub
                 ___ftadd
                   ___ftpack
               ___wmul
                 ___awdiv (ARG)
   _setup
     _delayS
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
       ___ftge (ARG)
       ___ftsub (ARG)
         ___ftadd
           ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
       _delayMs (ARG)
         ___awtoft
           ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
         ___ftge
         ___ftsub
           ___ftadd
             ___ftpack
         ___wmul
           ___awdiv (ARG)
         _delayUs
           ___awtoft
             ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
           ___ftge
           ___ftsub
             ___ftadd
               ___ftpack
           ___wmul
             ___awdiv (ARG)
     _medida_COMP
     _vRef

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     26      2E       6       57.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      3C       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon Apr 28 11:28:45 2014

                      _x 0048              __CFG_CP$OFF 0000                       l49 06BE  
           ___awdiv@sign 0076                       _va 0046      ___wmul@multiplicand 007B  
           ___ftadd@exp1 0026             ___ftadd@exp2 0025              __CFG_LVP$ON 0000  
           ___ftadd@sign 0024                      l222 065B                      l216 0644  
                    l245 079D                      l422 0484                      u605 0626  
                    u625 063F                      u725 05DF                      u645 064C  
                    u745 05E9                      u755 05F3                      u675 0662  
                    u765 05FB                      u925 0757                      u955 076A  
                    u985 077D                      _rpm 004C             ?_medida_COMP 0070  
           __CFG_BORV$LO 0000                      wreg 0009                     l1100 05FA  
                   l1104 0603                     l1120 04E7                     l1050 0630  
                   l1042 061A                     l1202 07C1                     l1108 060B  
                   l1140 04A5                     l1116 04D1                     l1212 07DC  
                   l1046 0621                     l1056 0649                     l1048 062B  
                   l1152 0726                     l1082 05D4                     l1058 0651  
                   l1162 073C                     l1218 047D                     l1092 05DC  
                   l1076 05C9                     l1180 0769                     l1156 072D  
                   l1094 05E8                     l1182 0773                     l1174 0756  
                   l1192 078F                     l1184 0778                     l1194 0799  
                   l1186 077C                     l1282 041C                     l1198 07AF  
                   l1278 0437                     u1015 0790                     u1135 067C  
                   u1075 0485                     u1085 048A             __CFG_WRT$OFF 0000  
                   _vRef 041E                     _main 041B             ___ftpack@arg 0070  
                   _paso 004A                     _loop 0430             ___ftpack@exp 0073  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0001                     ttemp 007E                     wtemp 007E  
          __CFG_MCLRE$ON 0000                    ?_vRef 0070                    ?_main 0042  
        __end_of___awdiv 0612                    ?_loop 0070          __end_of___ftadd 07F2  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0070          __end_of___ftsub 0462  
        ___awdiv@counter 0075          __end_of_delayMs 057A          __end_of_delayUs 0535  
          ___awtoft@sign 007D                    _mover 0672            ___ftpack@sign 0074  
                  _setup 043C                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F2             __end_of_vRef 0422             __end_of_main 041E  
           __end_of_loop 043C           __CFG_LPBOR$OFF 0000                   ??_vRef 0070  
                 ??_main 007E                   ??_loop 007E         ___awdiv@dividend 0072  
                 ?_mover 003C                   ?_setup 0070         __end_of___awtoft 04BB  
       __end_of___ftpack 0672                   _FVRCON 0117           __CFG_PWRTE$OFF 0000  
                 ___ftge 04BB                   ___wmul 047A                ??___awdiv 0074  
              ??___ftadd 0020           __CFG_STVREN$ON 0000                   _delayS 057A  
              ??___ftsub 007E         ___awdiv@quotient 0077                ??_delayMs 007E  
              ??_delayUs 007E                   mover@v 003C     __size_of_medida_COMP 000A  
__end_of__initialization 07FE               ___ftadd@f1 0078               ___ftadd@f2 007B  
             ___ftge@ff1 0070               ___ftge@ff2 0073               ___awtoft@c 0022  
             ___ftsub@f1 002A               ___ftsub@f2 0027           __pcstackCOMMON 0070  
           __pidataBANK0 0422            __end_of_mover 06FE            __end_of_setup 044A  
                ??_mover 007E                  ??_setup 007E               __pbssBANK0 0046  
             __pmaintext 041B                  ?___ftge 0070               _algoritmo1 0462  
                ?___wmul 0079                  ?_delayS 0037                  _CM2CON0 0113  
                _CM2CON1 0114                ?___awtoft 0022                ?___ftpack 0070  
        __size_of___ftge 003B                  ___awdiv 05BF                  ___ftadd 06FE  
        __size_of___wmul 0020                  ___ftsub 044A          __size_of_delayS 0045  
             ??___awtoft 0025                  _delayMs 0535               ??___ftpack 0075  
                _delayUs 04F6                  __ptext1 043C                  __ptext2 041E  
                __ptext3 0426                  __ptext4 0430                  __ptext5 0462  
                __ptext6 0672                  __ptext7 057A                  __ptext8 0535  
                __ptext9 04F6                  delayS@s 0037     end_of_initialization 07FE  
            ?_algoritmo1 0070                _PORTCbits 000E         __CFG_FOSC$INTOSC 0000  
              _TRISCbits 008E              _CM2CON0bits 0113           __end_of___ftge 04F6  
         __end_of___wmul 049A           __end_of_delayS 05BF            ??_medida_COMP 0070  
    start_initialization 07F2      __size_of_algoritmo1 0018         delayMs@ciclo_esp 0034  
               ??___ftge 0076                 ??___wmul 007D                 ??_delayS 007E  
            __pdataBANK0 004A          delayS@ciclo_esp 0039        __size_of___awtoft 0021  
      __size_of___ftpack 0060                ___latbits 0000            __pcstackBANK0 0020  
    __end_of_medida_COMP 0430                 ?___awdiv 0070                 ?___ftadd 0078  
               ?___ftsub 0027                 ?_delayMs 0032                 ?_delayUs 002D  
         __size_of_mover 008C           __size_of_setup 000E                delayMs@ms 0032  
              delayUs@us 002D           ___wmul@product 0020                _mover$470 003E  
              _mover$471 0040             ??_algoritmo1 007E        ___wmul@multiplier 0079  
            _medida_COMP 0426       __end_of_algoritmo1 047A         __size_of___awdiv 0053  
       __size_of___ftadd 00F4         __size_of___ftsub 0018                 ___awtoft 049A  
               ___ftpack 0612         __size_of_delayMs 0045         __size_of_delayUs 003F  
             _ANSELCbits 018E                 __ptext10 047A                 __ptext11 044A  
               __ptext12 06FE                 __ptext13 04BB                 __ptext14 049A  
               __ptext15 0612                 __ptext16 05BF         delayUs@ciclo_esp 002F  
          __size_of_vRef 0004            __size_of_main 0003            __size_of_loop 000C  
               main@argc 0042                 main@argv 0044        __CFG_CLKOUTEN$OFF 0000  
